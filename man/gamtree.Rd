% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gamtree.R
\name{gamtree}
\alias{gamtree}
\title{Recursively partition a dataset based on a (local) GAM, while accounting for 
global GAM terms.}
\usage{
gamtree(
  formula,
  data,
  weights = NULL,
  cluster = NULL,
  joint = TRUE,
  globalstart = FALSE,
  offset = NULL,
  abstol = 0.001,
  verbose = TRUE,
  method = "REML",
  bigdata = FALSE,
  mob_ctrl = mob_control(),
  ...
)
}
\arguments{
\item{formula}{specifies the model formula, consisting of three or four 
parts: the response variable followed by a tilde, the terms for the 
node-specific GAM followed by a vertical bar, optionally the terms for 
the global GAM followed by a vertical bar, and then the partitioning 
variables. See examples below.}

\item{data}{specifies the dataset (must be a data.frame).}

\item{weights}{currently ignored! optional numeric vector of case weights.}

\item{cluster}{optional numeric or factor vector with a cluster ID to be 
employed for clustered covariances in the parameter stability tests.
This argument should be used when the partitioning variables are not measured
on the individual observation level, but on a higher level. E.g., when 
the response variables consists of repeated measurements on multiple 
observations and the partitioning variables are time-invariant covariates.}

\item{joint}{Should local models be re-estimated jointly along with the
global model? Jointly re-estimating may yield a more accurate final model,
and may need less iterations to converge, but likely yield longer computation
times.}

\item{globalstart}{Should estimation initialize with the global model? Defaults 
\code{FALSE}, resulting in the tree (partition or subgroup structure) being 
estimated, first. If set to \code{TRUE}, (ignored if no global part has been
specified in the \code{formula}), the global part of the model will be estimated
first.}

\item{offset}{currently ignored.}

\item{abstol}{numeric. Specifies the convergence criterion. If the log-likelihood 
values of the full mixed-effects gam, from two consecutive iterations differ 
less than abstol, estimation is halted.}

\item{verbose}{logical. Should progress be printed to the commande line in 
every iteration? If true, the iteration number, information on the 
splitting procedure, and the log-likelihood (with df) value of the fitted 
full mixed-effects gam model is printed.}

\item{method}{character. Smoothing parameter estimation method used by \code{gam()}.
See \code{\link[mgcv]{gam}} or \code{\link[mgcv]{bam}} for details.}

\item{bigdata}{logical. Should function \code{\link[mgcv]{bam}} be used to fit
the GAMs? Defaults to \code{FALSE}, resulting in function \code{\link[mgcv]{gam}} 
being used for fitting the GAMs. \code{TRUE} will result in function 
\code{\link[mgcv]{bam}} being used for fitting the GAMs.}

\item{mob_ctrl}{a list with control parameters as returned by 
\code{\link[partykit]{mob_control}} to be passed to function 
\code{\link[partykit]{mob}}. Note: argument `xtype` is set to 
`data.frame`, by default, and cannot be adjusted.}

\item{...}{additional arguments to be passed to the locally fitted 
\code{gam}s, through \code{mob()}'s fitting function (currently, the only 
option is the default \code{gam_fit()}).}
}
\value{
Returns an object of class \code{"gamtree"}. This is a list, containing
(amongst others) the GAM-based recursive partition (in \code{$tree}), and the 
fitted full GAM with both local and/or global fitted effects (in \code{$gamm},
if terms for the global GAM were specified in \code{formula}).
}
\description{
\code{gamtree} recursively partition a dataset based on a (local) GAM, in
which a smooth function (spline) of a single predictor variable is estimated, 
while accounting for globally specified smooth functions and random effects.
}
\examples{
## GAM tree without global terms:
gt1 <- gamtree(Pn ~ s(PAR, k = 5L) | Species, data = eco, cluster = eco$specimen, 
              verbose = FALSE)
summary(gt1)
## GAM tree with global terms:
gt2 <- gamtree(Pn ~ s(PAR, k = 5L) | s(cluster_id, bs = "re") + noise | Species, 
              data = eco, cluster = eco$specimen, verbose = FALSE)
summary(gt2)

}
